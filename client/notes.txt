Learning Angular

Виды взаимодествия:
[] -> забираем данные из компонента в шаблон
() ->  передаем данные из шаблона в компонент
[(ngModel)] -> two way binding (двойное связывание)
[ngStyle] -> описание стилей
# -> задается локальная референция к элементу
{} -> оборачивается обьект
@ -> Декоратор — это функция, которую надо добавить перед классом свойством или методом со знаком @.


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@Input -> В ситуациях, когда мы хотим отправить некоторый контент от родительского к дочернему компоненту,
нам нужно использовать декоратор @Input в дочернем компоненте, чтобы обеспечить привязку свойств между этими компонентами.

@Output ->  Более того, у нас могут быть некоторые события в дочернем компоненте, которые отражают его поведение обратно в родительский компонент.
Для этого мы собираемся использовать декоратор @Output с EventEmitter.



<ng-content> -> Элемент ng-content позволяет родительским компонентам внедрять код html в дочерние компоненты.
Пайпы -> специальные трансформеры, которые используются в HTML для трасформации данных (например дату (pipes))


    ========== Life cycle component ==========

  // call first
  constructor();

  // call second
  ngOnInit(): void;
  // call third (tracing state object)
  ngOnChanges(changes: SimpleChanges): void;

  // call fourth (do check)
  ngDoCheck(): void;

  // call fifth (init new data)
  ngAfterContentInit(): void;

  // call sixth (check content for new updates)
  ngAfterContentChecked(): void;

  // call seventh (call this method show that init already was initialization)
  ngAfterViewInit(): void;

  // call eighth (check current view)
  ngAfterViewChecked(): void;

  // kill component
  ngOnDestroy(): void;

  Angular pipe - это класс, который предваряется декоратором @Pipe() и реализует интерфейс PipeTransform
  с одним единственным методом transform() . В примере декоратору в качестве аргумента передается объект
  со свойством name , значение которого является именем фильтра. Именно по нему он будет вызываться в HTML-шаблоне.

  Service Class -> главная задача - хранение данных и передавать их различным компонентам

  === Commands ===
  --flat	Puts the file in src/app instead of its own directory.
  --module=app	Tells ng generate to register it in the imports array of the AppModule.



